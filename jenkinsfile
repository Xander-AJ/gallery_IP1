pipeline {
    agent any

    environment {
        MONGODB_CONNECTION = credentials('mongodb-connection')
        GITHUB_REPO_URL = 'https://github.com/Xander-AJ/gallery_IP1'
        Render_Server_URL = 'https://john-alexander-ip-1.onrender.com/' // Set the Render server URL
    }

    stages {
        stage('Source Code Management') {
            steps {
                // Checkout the code from your Git repository.
                checkout([$class: 'GitSCM',
                          branches: [[name: 'master']], 
                          userRemoteConfigs: [[url: env.GITHUB_REPO_URL, credentialsId: 'Xander-AJ']]
                ])
            }
        }

        stage('Build') {
            steps {
                script {
                    // Verify the existence of a package.json file.
                    def packageJsonExists = fileExists('package.json')

                    if (packageJsonExists) {
                        // Install project dependencies with npm.
                        sh 'npm install'
                        
                        // Additional build steps if needed.
                    } else {
                        error('package.json not found. This is not a Node.js project.')
                    }
                }
            }
        }

        stage('Test') {
            steps {
                // Run tests.
                sh 'npm test'

                // If tests fail, send an email notification.
                catchError {
                    emailext body: 'Tests failed. Please check the build logs for details.',
                             subject: 'Test Results',
                             to: 'xander.kamau7@gmail.com' 
                }
            }
        }

        stage('Deployment to Render') {
            steps {
                script {
                    // Access the MongoDB connection string
                    def mongoConnectionString = env.MONGODB_CONNECTION

                    // Access the Render server URL
                    def renderServerURL = env.Render_Server_URL

                    // Deploy your application to Render
                    // Start the server using 'node server'
                    sh "npm install -g serve" // Install a simple HTTP server
                    sh "npm run build" // Build your application (if needed)
                    sh "serve -s build -l 3000 &" // Start the server in the background

                    sh "curl -sSf $renderServerURL" // This command checks if the site is accessible.
                }
            }
        }
    }
}
